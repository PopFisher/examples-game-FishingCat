{"version":3,"sources":["assets/Cell.js","assets/GameData.js","assets/List.js","assets/wxOpenData.js"],"names":["GameData","require","cc","Class","extends","Component","properties","mIndexLabel","Label","mImg","Sprite","mNameLabel","mScoreLabel","mOpenId","default","visible","mDepth","mBack","SpriteFrame","mNameNode","Node","mScoreNode","start","init","index","imgURL","name","depth","score","openid","_this","this","bg","node","getComponent","spriteFrame","string","image","wx","createImage","onload","texture","Texture2D","initWithElement","handleLoadedTexture","src","instance","openId","color","statics","maxScore","maxDepth","friendData","isDataDirty","isDisplayDirty","module","exports","mPool","mCell","Prefab","NodePool","createRankItem","cellNode","get","instantiate","cell","y","addChild","cleanAllCell","children","length","put","UpdateRankList","self","data","avatarUrl","nickname","KVDataList","value","update","dt","onMessage","message","UploadGameData","Math","max","setUserCloudStorage","key","success","console","log","GetUserGameData","getUserCloudStorage","keyList","res","GetFriendGameData","getFriendCloudStorage","SortFriendGameData","compareScore","x","value1","parseInt","value2","sort"],"mappings":"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","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nvar GameData = require(\"GameData\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        mIndexLabel : cc.Label,//名次Label\r\n        mImg : cc.Sprite,//头像Sprite\r\n        mNameLabel : cc.Label,//名字Label\r\n        mScoreLabel : cc.Label,//得分Label\r\n        mOpenId : {\r\n            default : null,\r\n            visible : false\r\n        },\r\n        mDepth : {\r\n            default : 0,\r\n            visible : false\r\n        },//深度，暂时无用，只记录数据\r\n        mBack : [cc.SpriteFrame],//Cell背景图资源\r\n        mNameNode : cc.Node,\r\n        mScoreNode : cc.Node\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    init (index, imgURL, name, depth, score, openid) {\r\n        var bg = this.node.getComponent(cc.Sprite);\r\n        bg.spriteFrame = this.mBack[index % 2];//交替更换背景图片\r\n\r\n        this.mIndexLabel.string = index;//序号\r\n\r\n        //从微信获取用户头像并加载\r\n        let image = wx.createImage();\r\n        image.onload = () => {\r\n            let texture = new cc.Texture2D();\r\n            texture.initWithElement(image);\r\n            texture.handleLoadedTexture();\r\n            this.mImg.spriteFrame = new cc.SpriteFrame(texture);\r\n        };\r\n        image.src = imgURL;\r\n        \r\n        //玩家自己的名字和得分颜色为金色\r\n        if (openid === GameData.instance.openId)\r\n        {\r\n            this.mNameNode.color = cc.color(255,215,0,255);\r\n            this.mScoreNode.color = cc.color(255,215,0,255);\r\n        }\r\n        else\r\n        {\r\n            this.mNameNode.color = cc.color(255,255,255,255);\r\n            this.mScoreNode.color = cc.color(255,255,255,255);\r\n        }\r\n            \r\n\r\n        this.mNameLabel.string = name;\r\n        \r\n        this.mDepth = depth;\r\n        this.mScoreLabel.string = score;\r\n        this.mOpenId = openid;\r\n    }\r\n\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\nvar GameData = cc.Class({\r\n    extends: cc.Component,\r\n    statics: {\r\n        instance : null\r\n    },\r\n    properties: {\r\n        openId : 0,\r\n        maxScore : 0,//历史最高得分\r\n        maxDepth : 0,//历史最高深度\r\n        friendData : [],//好友游戏数据数组\r\n        isDataDirty : false,//是否更新数据\r\n        isDisplayDirty : false,//是否更新显示\r\n    },\r\n});\r\n\r\nGameData.instance = new GameData();\r\n\r\nmodule.exports = GameData;\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\nvar GameData = require(\"GameData\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        mPool : {\r\n            default : null,\r\n            visible : false\r\n        },\r\n        mCell : cc.Prefab\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n        if (this.mPool === null) \r\n        {\r\n            this.mPool = new cc.NodePool();    \r\n        }\r\n    },\r\n\r\n    createRankItem (index, imgURL, name, depth, score, openid) {\r\n        var cellNode = this.mPool.get();\r\n        if (!cellNode)\r\n        {\r\n            cellNode = cc.instantiate(this.mCell); \r\n        }\r\n        var cell = cellNode.getComponent(\"Cell\");\r\n        cell.init(index + 1, imgURL, name, depth, score, openid);\r\n        cellNode.y = -50 - index * 76;\r\n        this.node.addChild(cellNode);\r\n    },\r\n\r\n    cleanAllCell () {\r\n        let children = this.node.children;\r\n        for (let index = 0; index < children.length; index++) {\r\n            let cell = children[index];\r\n            this.mPool.put(cell);\r\n        }\r\n    },\r\n\r\n    UpdateRankList () {\r\n        var self = this;\r\n        this.cleanAllCell();\r\n        for (let index = 0; index < GameData.instance.friendData.length; index++) {\r\n            const data = GameData.instance.friendData[index];\r\n            self.createRankItem(index, data.avatarUrl, data.nickname, data.KVDataList[0].value, data.KVDataList[1].value, data.openid);\r\n        }\r\n    },\r\n\r\n    update (dt) {\r\n        if (GameData.instance.isDisplayDirty)\r\n        {\r\n            this.UpdateRankList();\r\n            GameData.instance.isDisplayDirty = false;\r\n        }\r\n    },\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\nvar GameData = require(\"GameData\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    \r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n        wx.onMessage(data => {\r\n            switch (data.message) {\r\n                case 'SetOpenId' :\r\n                {\r\n                    //openid登陆时主域获取，传到子域使用。\r\n                    //data: {message:'SetOpenId', openid:\"xxxxxxxxxxxxx\"}\r\n                    GameData.instance.openId = data.openid;\r\n                    GameData.instance.isDataDirty = true;\r\n                }\r\n                case 'UploadGameData' : {\r\n                    //上传得分\r\n                    //data: {message:'UploadGameData', score:999, depth:999}\r\n                    this.UploadGameData(data.score, data.depth);\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    //上传玩家游戏数据\r\n    UploadGameData (score , depth) {\r\n        var maxScore = Math.max(score, GameData.instance.maxScore);\r\n        var maxDepth = Math.max(depth, GameData.instance.maxDepth);\r\n        if (maxScore > GameData.instance.maxScore || maxDepth > GameData.instance.maxDepth)\r\n        {\r\n            GameData.instance.maxScore = maxScore;\r\n            GameData.instance.maxDepth = maxDepth;//记录最高分\r\n\r\n            wx.setUserCloudStorage({\r\n                KVDataList  :   [\r\n                    { \"key\":'depth', \"value\": \"\" + GameData.instance.maxDepth },\r\n                    { \"key\":'score', \"value\": \"\" + GameData.instance.maxScore }\r\n                ],\r\n                success :   function(){\r\n                    console.log(\"上传成功!\");\r\n                    GameData.instance.isDataDirty = true;\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    //获得玩家游戏数据\r\n    GetUserGameData () {\r\n        wx.getUserCloudStorage({\r\n            keyList : [\"depth\" , \"score\"],//要获取数据的key列表\r\n            success :   function(res){\r\n                console.log(\"下载玩家游戏数据成功!\");\r\n                if (res.KVDataList.length > 0)\r\n                {\r\n                    GameData.instance.maxDepth = res.KVDataList[0].value;\r\n                    GameData.instance.maxScore = res.KVDataList[1].value;\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    //获得玩家的好友游戏数据\r\n    GetFriendGameData () {\r\n        var self = this;\r\n        wx.getFriendCloudStorage({\r\n            keyList : [\"depth\" , \"score\"],\r\n            success :   function(res){\r\n                console.log(\"下载好友游戏数据成功!\")\r\n                GameData.instance.friendData = res.data;\r\n                self.SortFriendGameData();\r\n                GameData.instance.isDisplayDirty = true;//更新排行榜显示\r\n            }\r\n        });\r\n    },\r\n\r\n    //好友游戏数据排序，按得分从高到低\r\n    SortFriendGameData () {\r\n        var compareScore = function (x, y) {//比较得分\r\n\r\n            //由于使用这个demo的一些同学上传的数据不规范\r\n            //这样会导致排行榜排序错误，无法显示排行榜\r\n            //所以这里加了一段暴力的代码，只要发现数据没有读取出来，直接重制\r\n            if (x.KVDataList.length !== 2)\r\n            {\r\n                x.KVDataList =[\r\n                    { \"key\":'depth', \"value\": \"0\" },\r\n                    { \"key\":'score', \"value\": \"0\" }\r\n                ]\r\n            }\r\n            if (y.KVDataList.length !== 2) {\r\n                y.KVDataList =[\r\n                    { \"key\":'depth', \"value\": \"0\" },\r\n                    { \"key\":'score', \"value\": \"0\" }\r\n                ]\r\n            }\r\n            var value1 = parseInt(x.KVDataList[0].value);\r\n            var value2 = parseInt(y.KVDataList[0].value);\r\n            if (value1 && value2) {\r\n                if (value1 <= value2) {\r\n                    return 1;\r\n                } else if (value1 > value2) {\r\n                    return -1;\r\n                }\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n\r\n        }\r\n\r\n        GameData.instance.friendData.sort(compareScore);\r\n    },\r\n\r\n    update (dt) {\r\n        if (GameData.instance.isDataDirty)\r\n        {\r\n            this.GetUserGameData();\r\n            this.GetFriendGameData();\r\n            GameData.instance.isDataDirty = false;\r\n        }\r\n    },\r\n});\r\n"],"file":"project.dev.js"}